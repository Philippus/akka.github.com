---
layout: post
title: Akka HTTP 10.1.0 Released
author: Johannes Rudolph
short: We are happy to announce the 10.1.0 release of Akka HTTP
category: news
tags: [releases]
---

Dear hakkers,

we are happy to announce Akka Http 10.1.0, the first release of the 10.1.x series.

The most important changes are

 * Removing support for Akka 2.4.x which is at its end-of-life with the end of 2017. In the future, this will allow us
   to make use of features that only Akka 2.5 supports.
 * Removing methods that have been deprecated during the life-time of Akka HTTP 10.0.x. For now, methods only deprecated
   in the last release of Akka HTTP, 10.0.11, are not yet removed to allow for a smooth transition.
 * The new client pool implementation introduced in 10.0.11 is now the default. We have identified and fixed several
   bugs in the RC period so by now we are quite confident that the new client pool will be a solid replacement for the
   legacy one.
 * Documentation has been completely consolidated between Scala and Java pages. Hundreds of directive
   documentation pages have been merged  in a tireless effort by [@jonas](https://github.com/jonas),
   [@jlprat](https://github.com/jlprat), and Akka team's [@raboof](https://github.com/raboof).

### Akka is not an explicit dependency any more / Removal of Akka 2.4 support

Akka HTTP 10.0.x has always supported Akka 2.5, while allowing users to still remain on Akka 2.4.x if they choose to do so.
By now Akka 2.4 has reached its end of life. Therefore, Akka HTTP 10.1.x only supports Akka >= 2.5.11
(and future versions during the life of Akka HTTP 10.1.x) so we will be able to make of features only provided by Akka 2.5.
In some cases we need to bump the minimum supported patch version of Akka to be able to use new features quickly.

Using Akka HTTP with Akka 2.5 used to be
a bit confusing, because Akka HTTP explicitly depended on Akka 2.4. Trying to use it together with Akka 2.5,
running an Akka HTTP application could fail with class loading issues if you forgot to add a dependency to
both `akka-actor` *and* `akka-stream` of the same version. For that reason, we changed the policy not to depend on `akka-stream`
explicitly any more but mark it as a `provided` dependency in our build. That means that you will *always* have to add
a manual dependency to `akka-stream`. Please make sure you have chosen and added a dependency to `akka-stream` when
updating to the new version. (Veterans may remember this policy from spray.)

### Deprecation Removals

Methods were removed that have been deprecated during the life-time of Akka HTTP 10.0.x. Methods that were only deprecated
in the last release of Akka HTTP, 10.0.11, are not yet removed to allow for a smooth transition. In general, our guarantee
for minor release updates is that code that compiled on the latest version of the previous minor release (10.0.11 in this case)
should be both source and binary compatible with the latest version of the current minor release. We might make
exceptions to the rule for cases where the maintenance burden seems greater than the risk of breaking major users / third-party
libraries. We'll treat any other binary incompatibilities as regressions.

### New client pool implementation is now the default

The new client pool implementation introduced in 10.0.11 is now the default. Since 10.0.11, we fixed several bugs in the
new client pool implementation.
You can still fall back to the old implementation by setting `akka.http.host-connection-pool.pool-implementation = legacy`.

### Compatibility Notes

As the @ref[compatibility notes](../compatibility-guidelines.md) explain in detail, we guarantee binary compatibility. In
some cases, however, a new version is not strictly source compatible. We try to limit the impact of these kinds
of changes but sometimes, they are inevitable to improve the API.

Source incompatible changes are:

 * Removed deprecated methods from 10.0.x
 * `ServerBinding.unbind` return type has been changed to @scala[`Future[Done]`]@java[`CompletionStage[Done]`] for
   consistency.

### Support for Scala 2.13.0-M3

Akka HTTP 10.1.0 is released for Scala 2.11, 2.12, and 2.13.0-M3. Due to a [regression in Scala 2.13.0-M3](https://github.com/scala/scala-dev/issues/467)
tail call optimization does not apply any more in some cases where it did before which might lead to stack overflow when
running with Scala 2.13.0-M3.

### Removal of OSGi support

Supporting OSGi is error prone and high maintenance and it repeatably broke, blocked released, or metadata turned out to
be wrong. We do not have any experts that could fix problems and be available during releases to fix blocking errors
quickly so we had to remove OSGi support for now. If you care about OSGi support please step up and help out. Most important
would be adding tests that verify that the OSGi infrastructure does not break the build and the metadata actually works
at runtime. See [#1852](https://github.com/akka/akka-http/issues/1852) for more information.

### List of changes (since 10.1.0-RC2)

#### Improvements

##### akka-http-core

 * Add headers and getHeaders method to HttpMessage ([#1731](https://github.com/akka/akka-http/issues/1731))
 * More specific warning for HTTPS requests on HTTP endpoints ([#1829](https://github.com/akka/akka-http/issues/1829))
 * Add ability to access current response timeout ([#1811](https://github.com/akka/akka-http/issues/1811)) ([#1828](https://github.com/akka/akka-http/issues/1828))
 * Move ClientTransport from ConnectionPoolSettings to ClientConnectionSettings so the transport can be configured in all client APIs ([#1562](https://github.com/akka/akka-http/issues/1562))

##### akka-http

 * Support OAuth2 access token in URI query component as defined in RFC6750 ([#1769](https://github.com/akka/akka-http/issues/1769))

##### akka-http2-support

 * Support for trailing response headers in HTTP/2 ([#1857](https://github.com/akka/akka-http/issues/1857))

##### Documentation

 * Add docs and tests for combining | with / in paths ([#1861](https://github.com/akka/akka-http/issues/1861))
 * Fix links to objects in the API docs

#### Bug Fixes

##### akka-http-core

 * Normalize port in `Uri.apply` consistently ([#1763](https://github.com/akka/akka-http/issues/1763))
 * Return status 400 instead of 500 for requests with invalid URI scheme ([#36](https://github.com/akka/akka-http/issues/36))
 * Allow Sec-WebSocket-Extensions in requests
 * Fix incompatibility of Akka HTTP with Akka typed ([#1878](https://github.com/akka/akka-http/issues/1878))

##### akka-http2-support

 * Fix HTTP/2 trying to send even if stream window was depleted ([#1882](https://github.com/akka/akka-http/issues/1882))

Please see the full list of changes since 10.0.11 at https://doc.akka.io/docs/akka-http/current/release-notes/10.1.x.html.

## Credits

A total of 34 issues were closed since 10.1.0-RC2.

The complete list of closed issues can be found on the [10.1.0 milestone](https://github.com/akka/akka-http/milestone/35?closed=1) milestones on GitHub.

For this release we had the help of 12 contributors – thank you all very much!

```
commits  added  removed
     17    375      115 Johannes Rudolph
      7    264      104 Arnout Engelen
      3    282       70 Josep Prat
      3     43        2 Konrad `ktoso` Malawski
      2     71       12 Roman Filonenko
      1    252       60 Jean-François Guéna
      1    147        3 Nathaniel Fischer
      1     40        7 Michał Węgrzyn
      1     33        2 mihbor
      1      4        4 Jimin Hsieh
      1      4        2 Ignasi Marimon-Clos
      1      1        1 Patrik Nordwall
```

Happy hakking!

– The Akka Team
